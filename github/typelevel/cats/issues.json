{
  "data":{
    "repository":{
      "issues":{
        "nodes":[
          {
            "number":291,
            "title":"Style convention for override modifier",
            "bodyText":"We should choose a convention for when we use the override modifier and be consistent with it.\nSee this discussion.\nWe can use the comments section of this issue page to discuss what we want our convention to be. Once we've reached a conclusion, someone can create a follow-up PR that updates code to follow the established convention.",
            "url":"https://github.com/typelevel/cats/issues/291"
          },
          {
            "number":514,
            "title":"Fix law-checking to print better error messages",
            "bodyText":"I'm not sure how to do this, but in Cats right now when a property fails you see the generated input (good) but then just a gigantic stack trace.\nWhen we set this up in Algebra, the ?== operator was designed to use ScalaCheck's labels so that you could \"see\" the values being compared when there was a failure. I'm not sure why that isn't working here.\nAnyway, this isn't critically-important, but since many folks will be discovering law-checking through Cats, it would be good to have a better experience here.",
            "url":"https://github.com/typelevel/cats/issues/514"
          },
          {
            "number":581,
            "title":"Better error message for missing implicits",
            "bodyText":"Lots of newcomers forget to import implicit instances (e.g. cats.implicits._) which causes lots of pain.\nIt might be nice if when Functor[X] is not found, the the message indicates that you may have failed to import it (and can even mention cats.std.all._ or cats.implicits._).\nWhat do you all think?",
            "url":"https://github.com/typelevel/cats/issues/581"
          },
          {
            "number":1017,
            "title":"Jump start guide",
            "bodyText":"One of my coworkers was looking at the GitHub repo and website and was confused at first because he didn't really understand what constituted \"abstractions for functional programming.\" He said something that would be really helpful is if there was a \"jump start guide\" of sorts that gives short examples that can get you started.. examples I can think of are Validated, Xor, Traverse/Applicative, Kleisli..\nNow the question is where should such a thing live?",
            "url":"https://github.com/typelevel/cats/issues/1017"
          },
          {
            "number":1749,
            "title":"Site: arrows on background typo",
            "bodyText":"On Cats page it seems that there's a typo in the background image: the above f should probably be f' so that it would match the annotation above the arrow that's drawn diagonally, which is g' . f'.",
            "url":"https://github.com/typelevel/cats/issues/1749"
          },
          {
            "number":1762,
            "title":"Scalafix rewrite from Scalaz",
            "bodyText":"Once Cats becomes stable, some of us will want to migrate from Scalaz. To ease the process, an automatic migration (e.g. via scalafix) would be really useful in bigger projects.",
            "url":"https://github.com/typelevel/cats/issues/1762"
          },
          {
            "number":1807,
            "title":"a \"works with cats\" badge",
            "bodyText":"So that projects that integrate with cats can use.",
            "url":"https://github.com/typelevel/cats/issues/1807"
          },
          {
            "number":1835,
            "title":"Style scaladoc slightly",
            "bodyText":"I have a bunch of Scaladocs for different projects open for reference, but they all look identical, so I get lost sometimes. Something simple like using Typelevel red rather than the default blue would totally solve this.",
            "url":"https://github.com/typelevel/cats/issues/1835"
          }
        ]
      }
    }
  }
}