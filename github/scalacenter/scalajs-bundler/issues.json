{
  "data":{
    "repository":{
      "issues":{
        "nodes":[
          {
            "number":99,
            "title":"Relax NPM dependency version conflict resolution",
            "bodyText":"Current implementation requires that for each NPM package all version descriptors match exactly (for example, 15.4.2 and ~15.4.2 don't match). So any such \"conflict\" must be resolved explicitly via npmResolutions. This is not a big problem at the moment, but is likely to become more of an issue as the number of libraries using the bundler grows.\nThere are two ways to deal with this I can think of:\n\nAutomatic resolution for such conflicts within the plugin itself. This would, however, require adding and maintaining conflict resolution code compatible with package.json specification.\nA much simpler solution would be to delegate such resolution to npm/yarn themselves. package.json supports passing multiple version descriptors, which should be perfect for this purpose.",
            "url":"https://github.com/scalacenter/scalajs-bundler/issues/99"
          },
          {
            "number":101,
            "title":"Use webpack 2.2.1 by default",
            "bodyText":"",
            "url":"https://github.com/scalacenter/scalajs-bundler/issues/101"
          },
          {
            "number":136,
            "title":"Detection of jsdom installation is not precise enough",
            "bodyText":"We just check if there is a target/scalajs-bundler-jsdom directory, but we should check for the presence of target/scalajs-bundler-jsdom/node_modules/jsdom.",
            "url":"https://github.com/scalacenter/scalajs-bundler/issues/136"
          },
          {
            "number":147,
            "title":"Mention that the file to include is the one suffixed by -bundle.js",
            "bodyText":"",
            "url":"https://github.com/scalacenter/scalajs-bundler/issues/147"
          },
          {
            "number":151,
            "title":"yarn.lock is not version controlled.",
            "bodyText":"The yarn lock is in the target directory. It should be version controlled. I suggest it should go in the project baseDirectory. For example, client/baseDirectory.\n\nIn order to get consistent installs across machines, Yarn needs more information than the dependencies you configure in your package.json. Yarn needs to store exactly which versions of each dependency were installed.\n\nhttps://yarnpkg.com/lang/en/docs/yarn-lock",
            "url":"https://github.com/scalacenter/scalajs-bundler/issues/151"
          },
          {
            "number":157,
            "title":"Bump to webpack 3",
            "bodyText":"Webpack is currently at 3.5.5\nif we set version in webpack := \"3.5.5\" there is an error saying that the webpack version is not supported.",
            "url":"https://github.com/scalacenter/scalajs-bundler/issues/157"
          }
        ]
      }
    }
  }
}