{
  "data":{
    "repository":{
      "issues":{
        "nodes":[
          {
            "number":492,
            "title":"Parser: java.util.NoSuchElementException",
            "bodyText":"Parsing: https://github.com/milessabin/shapeless/blob/master/core/src/test/scala/shapeless/hlist.scala\nStacktrace:\njava.util.NoSuchElementException: head of empty list\n  scala.collection.immutable.Nil$.head(List.scala:420)\n  scala.collection.immutable.Nil$.head(List.scala:417)\n  scala.meta.internal.parsers.ScalametaParser.loop$5(ScalametaParser.scala:1868)\n  scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:1903)\n  scala.meta.internal.parsers.ScalametaParser$$anonfun$expr$1$$anonfun$41.apply(ScalametaParser.scala:1594)\n  scala.meta.internal.parsers.ScalametaParser$$anonfun$expr$1$$anonfun$41.apply(ScalametaParser.scala:1594)\n  scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:394)\n  scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:400)\n  scala.meta.internal.parsers.ScalametaParser$$anonfun$expr$1.apply(ScalametaParser.scala:1594)\n  scala.meta.internal.parsers.ScalametaParser$$anonfun$expr$1.apply(ScalametaParser.scala:1522)\n  scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:394)\n  scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:400)\n  scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:1522)\n  scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:1499)\n  scala.meta.internal.parsers.ScalametaParser$$anonfun$patDefOrDcl$1.apply(ScalametaParser.scala:2939)\n  scala.meta.internal.parsers.ScalametaParser$$anonfun$patDefOrDcl$1.apply(ScalametaParser.scala:2923)\n  scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:394)\n  scala.meta.internal.parsers.ScalametaParser.patDefOrDcl(ScalametaParser.scala:2923)\n  scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:2907)\n  scala.meta.internal.parsers.ScalametaParser.localDef(ScalametaParser.scala:3517)\n  scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:3551)\n  scala.meta.internal.parsers.ScalametaParser$$anonfun$block$1.apply(ScalametaParser.scala:2095)\n  scala.meta.internal.parsers.ScalametaParser$$anonfun$block$1.apply(ScalametaParser.scala:2095)\n  scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:394)\n  scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:400)\n  scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2094)\n  scala.meta.internal.parsers.ScalametaParser$$anonfun$blockExpr$1$$anonfun$apply$49.apply(ScalametaParser.scala:2085)\n  scala.meta.internal.parsers.ScalametaParser$$anonfun$blockExpr$1$$anonfun$apply$49.apply(ScalametaParser.scala:2084)\n  scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:338)\n  scala.meta.internal.parsers.ScalametaParser$$anonfun$blockExpr$1.apply(ScalametaParser.scala:2083)\n  scala.meta.internal.parsers.ScalametaParser$$anonfun$blockExpr$1.apply(ScalametaParser.scala:2083)\n  scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:394)\n  scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:400)\n  scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2082)\n  scala.meta.internal.parsers.ScalametaParser$$anonfun$simpleExpr$1.apply(ScalametaParser.scala:1965)\n  scala.meta.internal.parsers.ScalametaParser$$anonfun$simpleExpr$1.apply(ScalametaParser.scala:1943)\n  scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:394)\n  scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:400)\n  scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:1943)\n  scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:1921)\n  scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:1897)\n  scala.meta.internal.parsers.ScalametaParser$$anonfun$expr$1$$anonfun$41.apply(ScalametaParser.scala:1594)\n  scala.meta.internal.parsers.ScalametaParser$$anonfun$expr$1$$anonfun$41.apply(ScalametaParser.scala:1594)\n  scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:394)\n  scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:400)\n  scala.meta.internal.parsers.ScalametaParser$$anonfun$expr$1.apply(ScalametaParser.scala:1594)\n  scala.meta.internal.parsers.ScalametaParser$$anonfun$expr$1.apply(ScalametaParser.scala:1522)\n  scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:394)\n...",
            "url":"https://github.com/scalameta/scalameta/issues/492"
          },
          {
            "number":494,
            "title":"Parse repeated by-name parameters in Dotty dialect",
            "bodyText":"Repeated by-name parameters:\nclass Foo(bars: => Int*)\nReference: http://docs.scala-lang.org/sips/pending/repeated-byname.html\nScala meta has the concept of dialect for different Scala syntax (think sbt, scala or dotty). The dotty dialect does not yet support repeated by-name parameters.\nA good place to start is https://github.com/scalameta/scalameta/blob/master/scalameta/parsers/src/main/scala/scala/meta/internal/parsers/ScalametaParser.scala#L2680.",
            "url":"https://github.com/scalameta/scalameta/issues/494"
          },
          {
            "number":497,
            "title":"Remove self types for objects in Dotty dialect",
            "bodyText":"Self types on objects look like:\nobject A { self: A =>\n}\nThey are removed in Dotty, although the Dotty dialect still parses it successfully. This syntax should not be supported anymore.\nCurrent implementation: \n  \n    \n      scalameta/scalameta/parsers/src/main/scala/scala/meta/internal/parsers/ScalametaParser.scala\n    \n    \n         Line 3161\n      in\n      ea74884\n    \n    \n    \n    \n\n        \n          \n           def constrBlock(): Term.Block = autoPos { \n        \n    \n  \n\n. A good way to do this would be to pass in an extra boolean parameter to constBlock and fail when a selfInvocation is correctly parsed.",
            "url":"https://github.com/scalameta/scalameta/issues/497"
          },
          {
            "number":901,
            "title":"Add support for Dotty enums",
            "bodyText":"https://github.com/lampepfl/dotty/blob/master/docs/docs/reference/adts.md",
            "url":"https://github.com/scalameta/scalameta/issues/901"
          },
          {
            "number":903,
            "title":"Add support for Dotty named type arguments",
            "bodyText":"https://github.com/dotty-staging/dotty/blob/e9d87e0dc3f270b3a603267c50b8d7ca66272263/docs/docs/reference/named-typeargs.md",
            "url":"https://github.com/scalameta/scalameta/issues/903"
          }
        ]
      }
    }
  }
}