{
  "data":{
    "repository":{
      "issues":{
        "nodes":[
          {
            "number":2038,
            "title":"Log.info(\"1. Waiting for source changes on project X... (press enter to interrupt)\") on ~",
            "bodyText":"originally reported by @lihaoyi on Gitter:\n\nShouldn't ~quasiquote/compile still watch like\nthe quasiquote projects watches?\nafter all i'm asking for that subproject specifically\n\n@retronym responded:\n\n~ is a global command, and it uses whatever the watched key evaluates to the in the current project. So project qq; ~compile should work, but not ~qq/compile\n\nOne way to disambiguate may be to display:\n1. Waiting for source changes on project X... (press enter to interrupt)\n\ninstead of the current:\n1. Waiting for source changes... (press enter to interrupt)\n\nRelated:\n\nsbt/website#150",
            "url":"https://github.com/sbt/sbt/issues/2038"
          },
          {
            "number":3127,
            "title":"Run `doc` in CI, to catch scaladoc issues",
            "bodyText":"h/t to @fommil for the idea.\nThis depends on #2812 (\"Errors running sbtRoot/compile:doc\") to be fixed first.",
            "url":"https://github.com/sbt/sbt/issues/3127"
          },
          {
            "number":3212,
            "title":"Improve output of `plugins`",
            "bodyText":"The output of plugins should improve and be more readable.\nThis is how it looks like now:\nIn file:/data/rw/code/scala/sbt/\n\tsbt.plugins.IvyPlugin: enabled in testingProj, sbtRoot, protocolProj, scriptedSbtProj, stdTaskProj, sbtProj, taskProj, runProj, bundledLauncherProj, mainProj, scriptedPluginProj, coreMacrosProj, mainSettingsProj, actionsProj, commandProj, testAgentProj\n\tsbt.plugins.JvmPlugin: enabled in testingProj, sbtRoot, protocolProj, scriptedSbtProj, stdTaskProj, sbtProj, taskProj, runProj, bundledLauncherProj, mainProj, scriptedPluginProj, coreMacrosProj, mainSettingsProj, actionsProj, commandProj, testAgentProj\n\tsbt.plugins.CorePlugin: enabled in testingProj, sbtRoot, protocolProj, scriptedSbtProj, stdTaskProj, sbtProj, taskProj, runProj, bundledLauncherProj, mainProj, scriptedPluginProj, coreMacrosProj, mainSettingsProj, actionsProj, commandProj, testAgentProj\n\tsbt.plugins.JUnitXmlReportPlugin: enabled in testingProj, sbtRoot, protocolProj, scriptedSbtProj, stdTaskProj, sbtProj, taskProj, runProj, bundledLauncherProj, mainProj, scriptedPluginProj, coreMacrosProj, mainSettingsProj, actionsProj, commandProj, testAgentProj\n\tsbt.plugins.Giter8TemplatePlugin: enabled in testingProj, sbtRoot, protocolProj, scriptedSbtProj, stdTaskProj, sbtProj, taskProj, runProj, bundledLauncherProj, mainProj, scriptedPluginProj, coreMacrosProj, mainSettingsProj, actionsProj, commandProj, testAgentProj\n\tcom.lucidchart.sbt.scalafmt.ScalafmtCorePlugin: enabled in sbtRoot\n\tcom.lucidchart.sbt.scalafmt.ScalafmtPlugin: enabled in sbtRoot\n\tbintray.BintrayPlugin: enabled in testingProj, sbtRoot, protocolProj, scriptedSbtProj, stdTaskProj, sbtProj, taskProj, runProj, bundledLauncherProj, mainProj, scriptedPluginProj, coreMacrosProj, mainSettingsProj, actionsProj, commandProj, testAgentProj\n\tsbt.contraband.ContrabandPlugin: enabled in testingProj, protocolProj, runProj, mainProj, commandProj\n\tsbt.contraband.JsonCodecPlugin: enabled in testingProj, protocolProj, commandProj\n\tPublishBinPlugin: enabled in testingProj, sbtRoot, protocolProj, scriptedSbtProj, stdTaskProj, sbtProj, taskProj, runProj, bundledLauncherProj, mainProj, scriptedPluginProj, coreMacrosProj, mainSettingsProj, actionsProj, commandProj, testAgentProj\n\tScriptedPlugin: enabled in sbtRoot\n\tNightlyPlugin: enabled in testingProj, sbtRoot, protocolProj, scriptedSbtProj, stdTaskProj, sbtProj, taskProj, runProj, bundledLauncherProj, mainProj, scriptedPluginProj, coreMacrosProj, mainSettingsProj, actionsProj, commandProj, testAgentProj\n\tSbtLauncherPlugin: enabled in bundledLauncherProj\n\tStatusPlugin: enabled in testingProj, sbtRoot, protocolProj, scriptedSbtProj, stdTaskProj, sbtProj, taskProj, runProj, bundledLauncherProj, mainProj, scriptedPluginProj, coreMacrosProj, mainSettingsProj, actionsProj, commandProj, testAgentProj\n\nIdeally, we would like to show clearly the following items:\n\nA header for every plugin (with its fully qualified name)\nIndented by two spaces, a list of all the projects in which the plugin is enabled on. (Experiment with listing the projects each one in a new line.\nUse colors for the plugin name, to make the output more readable.\n\nAnother approach is to show all the plugins enabled per project, instead of all projects in which a plugin is enabled.\nI feel this is a perfect candidate for the Scala Center spree in Scaladays Copenhague.",
            "url":"https://github.com/sbt/sbt/issues/3212"
          },
          {
            "number":3309,
            "title":"Make `~` fail if command is not found",
            "bodyText":"This is a ticket for the Scala Center spree at Scala Wave (Gdansk, Poland).\nThe goal of this ticket is to fix this \"behaviour\" that should fail when the task is not found.\nsteps\nRun ~myNonExistingTask.\nproblem\nThe ~ command waits for user input even if myNonExistingTask does not exist.\nexpectation\nIt should fail straight away without entering in the watch cycle. That means no user input is expected, normal error is reported to the user.\nnotes\nsbt version: 1.0.0 (master branch)",
            "url":"https://github.com/sbt/sbt/issues/3309"
          }
        ]
      }
    }
  }
}